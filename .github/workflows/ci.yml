name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run linting
        run: make lint

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            bash-version: "4+"
            description: "Ubuntu (Bash 4+)"
          # Temporarily disabled - macOS tests taking too long
          # - os: macos-latest
          #   bash-version: "3.2+"
          #   description: "macOS (Bash 3.2+)"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install shellcheck

      - name: Show bash version
        run: |
          echo "Platform: ${{ matrix.description }}"
          bash --version | head -1

      - name: Verify bash compatibility (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          bash_version=$(bash --version | head -1 | grep -o '[0-9]\+\.[0-9]\+')
          echo "Detected bash version: $bash_version"
          if [[ "$bash_version" < "3.2" ]]; then
            echo "ERROR: Bash version too old: $bash_version"
            exit 1
          fi
          echo "✅ Bash $bash_version meets minimum requirement (3.2+)"

      - name: Check dependencies
        run: make check-deps

      - name: Version status
        run: |
          echo "Version status:"
          make version

      - name: Run tests
        run: make test

      - name: Test summary
        run: |
          echo "✅ Tests completed on ${{ matrix.description }}"